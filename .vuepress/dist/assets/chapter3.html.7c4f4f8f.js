import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,a as n,b as c,e as a,d as s,r as l}from"./app.d6224ea7.js";const u={},i=a(`<h2 id="wapper\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#wapper\u4ECB\u7ECD" aria-hidden="true">#</a> wapper\u4ECB\u7ECD</h2><p><img src="https://s2.loli.net/2022/09/30/JLlt2E1zyNRhP4C.png" alt="Snipaste_2022-09-30_19-51-52.png" loading="lazy"></p><ul><li>Wrapper \uFF1A \u6761\u4EF6\u6784\u9020\u62BD\u8C61\u7C7B\uFF0C\u6700\u9876\u7AEF\u7236\u7C7B <ul><li>AbstractWrapper \uFF1A \u7528\u4E8E\u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5\uFF0C\u751F\u6210 sql \u7684 where \u6761\u4EF6 <ul><li>QueryWrapper \uFF1A \u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5</li><li>UpdateWrapper \uFF1A Update \u6761\u4EF6\u5C01\u88C5</li><li>AbstractLambdaWrapper \uFF1A \u4F7F\u7528Lambda \u8BED\u6CD5 <ul><li>LambdaQueryWrapper \uFF1A\u7528\u4E8ELambda\u8BED\u6CD5\u4F7F\u7528\u7684\u67E5\u8BE2Wrapper</li><li>LambdaUpdateWrapper \uFF1A Lambda \u66F4\u65B0\u5C01\u88C5Wrapper</li></ul></li></ul></li></ul></li></ul><h2 id="querywrapper" tabindex="-1"><a class="header-anchor" href="#querywrapper" aria-hidden="true">#</a> QueryWrapper</h2><h3 id="\u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6" aria-hidden="true">#</a> \u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u67E5\u8BE2\u7528\u6237\u540D\u5305\u542Ba\uFF0C\u5E74\u9F84\u572820\u523030\u4E4B\u95F4\uFF0C\u5E76\u4E14\u90AE\u7BB1\u4E0D\u4E3Anull\u7684\u7528\u6237\u4FE1\u606F</span>
	<span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6" aria-hidden="true">#</a> \u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u6309\u5E74\u9F84\u964D\u5E8F\u67E5\u8BE2\u7528\u6237\uFF0C\u5982\u679C\u5E74\u9F84\u76F8\u540C\u5219\u6309id\u5347\u5E8F\u6392\u5217</span>
	<span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0 ORDER BY age DESC,id ASC</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	queryWrapper
		<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EC4\u88C5\u5220\u9664\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u88C5\u5220\u9664\u6761\u4EF6" aria-hidden="true">#</a> \u7EC4\u88C5\u5220\u9664\u6761\u4EF6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u5220\u9664email\u4E3A\u7A7A\u7684\u7528\u6237</span>
	<span class="token comment">//DELETE FROM t_user WHERE (email IS NULL)</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	queryWrapper<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6761\u4EF6\u6784\u9020\u5668\u4E5F\u53EF\u4EE5\u6784\u5EFA\u5220\u9664\u8BED\u53E5\u7684\u6761\u4EF6</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6761\u4EF6\u7684\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7684\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u6761\u4EF6\u7684\u4F18\u5148\u7EA7</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5C06\uFF08\u5E74\u9F84\u5927\u4E8E20\u5E76\u4E14\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\uFF09\u6216\u90AE\u7BB1\u4E3Anull\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
	<span class="token comment">//UPDATE t_user SET age=?, email=? WHERE (username LIKE ? AND age &gt; ? OR email IS NULL)</span>
	queryWrapper
		<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5C06\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\u5E76\u4E14\uFF08\u5E74\u9F84\u5927\u4E8E20\u6216\u90AE\u7BB1\u4E3Anull\uFF09\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
	<span class="token comment">//UPDATE t_user SET age=?, email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span>
	<span class="token comment">//lambda\u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97</span>
	queryWrapper
    	<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EC4\u88C5select\u5B50\u53E5" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u88C5select\u5B50\u53E5" aria-hidden="true">#</a> \u7EC4\u88C5select\u5B50\u53E5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test05</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u67E5\u8BE2\u7528\u6237\u4FE1\u606F\u7684username\u548Cage\u5B57\u6BB5</span>
	<span class="token comment">//SELECT username,age FROM t_user</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	queryWrapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//selectMaps()\u8FD4\u56DEMap\u96C6\u5408\u5217\u8868\uFF0C\u901A\u5E38\u914D\u5408select()\u4F7F\u7528\uFF0C\u907F\u514DUser\u5BF9\u8C61\u4E2D\u6CA1\u6709\u88AB\u67E5\u8BE2\u5230\u7684\u5217\u503C\u4E3Anull</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> maps <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectMaps</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	maps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0\u5B50\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u5B50\u67E5\u8BE2" aria-hidden="true">#</a> \u5B9E\u73B0\u5B50\u67E5\u8BE2</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test06</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u67E5\u8BE2id\u5C0F\u4E8E\u7B49\u4E8E3\u7684\u7528\u6237\u4FE1\u606F</span>
	<span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (id IN (select id from t_user where id &lt;= 3))</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	queryWrapper<span class="token punctuation">.</span><span class="token function">inSql</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;select id from t_user where id &lt;= 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updatewrapper" tabindex="-1"><a class="header-anchor" href="#updatewrapper" aria-hidden="true">#</a> UpdateWrapper</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test07</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u5C06\uFF08\u5E74\u9F84\u5927\u4E8E20\u6216\u90AE\u7BB1\u4E3Anull\uFF09\u5E76\u4E14\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
	<span class="token comment">//\u7EC4\u88C5set\u5B50\u53E5\u4EE5\u53CA\u4FEE\u6539\u6761\u4EF6</span>
	<span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//lambda\u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97</span>
	updateWrapper
		<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u8FD9\u91CC\u5FC5\u987B\u8981\u521B\u5EFAUser\u5BF9\u8C61\uFF0C\u5426\u5219\u65E0\u6CD5\u5E94\u7528\u81EA\u52A8\u586B\u5145\u3002\u5982\u679C\u6CA1\u6709\u81EA\u52A8\u586B\u5145\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E3Anull</span>
	<span class="token comment">//UPDATE t_user SET username=?, age=?,email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span>
	<span class="token comment">//User user = new User();</span>
	<span class="token comment">//user.setName(&quot;\u5F20\u4E09&quot;);</span>
	<span class="token comment">//int result = userMapper.update(user, updateWrapper);</span>
	<span class="token comment">//UPDATE t_user SET age=?,email=? WHERE (username LIKE ? AND (age &gt; ? OR email IS NULL))</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="condition" tabindex="-1"><a class="header-anchor" href="#condition" aria-hidden="true">#</a> condition</h2><blockquote><p>\u5728\u771F\u6B63\u5F00\u53D1\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u7EC4\u88C5\u6761\u4EF6\u662F\u5E38\u89C1\u7684\u529F\u80FD\uFF0C\u800C\u8FD9\u4E9B\u6761\u4EF6\u6570\u636E\u6765\u6E90\u4E8E\u7528\u6237\u8F93\u5165\uFF0C\u662F\u53EF\u9009\u7684\uFF0C\u56E0 \u6B64\u6211\u4EEC\u5728\u7EC4\u88C5\u8FD9\u4E9B\u6761\u4EF6\u65F6\uFF0C\u5FC5\u987B\u5148\u5224\u65AD\u7528\u6237\u662F\u5426\u9009\u62E9\u4E86\u8FD9\u4E9B\u6761\u4EF6\uFF0C\u82E5\u9009\u62E9\u5219\u9700\u8981\u7EC4\u88C5\u8BE5\u6761\u4EF6\uFF0C\u82E5 \u6CA1\u6709\u9009\u62E9\u5219\u4E00\u5B9A\u4E0D\u80FD\u7EC4\u88C5\uFF0C\u4EE5\u514D\u5F71\u54CDSQL\u6267\u884C\u7684\u7ED3\u679C</p></blockquote><h3 id="\u601D\u8DEF\u4E00" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF\u4E00" aria-hidden="true">#</a> \u601D\u8DEF\u4E00\uFF1A</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test08</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\u6216\u672A\u9009\u62E9\uFF09</span>
	<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//StringUtils.isNotBlank()\u5224\u65AD\u67D0\u5B57\u7B26\u4E32\u662F\u5426\u4E0D\u4E3A\u7A7A\u4E14\u957F\u5EA6\u4E0D\u4E3A0\u4E14\u4E0D\u7531\u7A7A\u767D\u7B26(whitespace) \u6784\u6210</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		queryWrapper<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		queryWrapper<span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (age &gt;= ? AND age &lt;= ?)</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u601D\u8DEF\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF\u4E8C" aria-hidden="true">#</a> \u601D\u8DEF\u4E8C\uFF1A</h3><blockquote><p>\u4E0A\u9762\u7684\u5B9E\u73B0\u65B9\u6848\u6CA1\u6709\u95EE\u9898\uFF0C\u4F46\u662F\u4EE3\u7801\u6BD4\u8F83\u590D\u6742\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5E26condition\u53C2\u6570\u7684\u91CD\u8F7D\u65B9\u6CD5\u6784\u5EFA\u67E5\u8BE2\u6761\u4EF6\uFF0C\u7B80\u5316\u4EE3\u7801\u7684\u7F16\u5199</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test08UseCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\u6216\u672A\u9009\u62E9\uFF09</span>
	<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
	<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//StringUtils.isNotBlank()\u5224\u65AD\u67D0\u5B57\u7B26\u4E32\u662F\u5426\u4E0D\u4E3A\u7A7A\u4E14\u957F\u5EA6\u4E0D\u4E3A0\u4E14\u4E0D\u7531\u7A7A\u767D\u7B26(whitespace) \u6784\u6210</span>
	queryWrapper
		<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (age &gt;= ? AND age &lt;= ?)</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lambdaquerywrapper" tabindex="-1"><a class="header-anchor" href="#lambdaquerywrapper" aria-hidden="true">#</a> LambdaQueryWrapper</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test09</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\uFF09</span>
	<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
	<span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u907F\u514D\u4F7F\u7528\u5B57\u7B26\u4E32\u8868\u793A\u5B57\u6BB5\uFF0C\u9632\u6B62\u8FD0\u884C\u65F6\u9519\u8BEF</span>
	queryWrapper
		<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lambdaupdatewrapper" tabindex="-1"><a class="header-anchor" href="#lambdaupdatewrapper" aria-hidden="true">#</a> LambdaUpdateWrapper</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//\u7EC4\u88C5set\u5B50\u53E5</span>
	<span class="token class-name">LambdaUpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaUpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	updateWrapper
		<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getEmail</span><span class="token punctuation">,</span> <span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getEmail</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">//lambda\u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97</span>
	<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h1 id="\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u63D2\u4EF6" aria-hidden="true">#</a> \u63D2\u4EF6</h1><h2 id="\u5206\u9875\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5206\u9875\u63D2\u4EF6" aria-hidden="true">#</a> \u5206\u9875\u63D2\u4EF6</h2><blockquote><p>MyBatis Plus\u81EA\u5E26\u5206\u9875\u63D2\u4EF6\uFF0C\u53EA\u8981\u7B80\u5355\u7684\u914D\u7F6E\u5373\u53EF\u5B9E\u73B0\u5206\u9875\u529F\u80FD</p></blockquote><h3 id="\u6DFB\u52A0\u914D\u7F6E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u914D\u7F6E\u7C7B" aria-hidden="true">#</a> \u6DFB\u52A0\u914D\u7F6E\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.atguigu.mybatisplus.mapper&quot;</span><span class="token punctuation">)</span> <span class="token comment">//\u53EF\u4EE5\u5C06\u4E3B\u7C7B\u4E2D\u7684\u6CE8\u89E3\u79FB\u5230\u6B64\u5904</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span>
		<span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span>MYSQL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5" aria-hidden="true">#</a> \u6D4B\u8BD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u8BBE\u7F6E\u5206\u9875\u53C2\u6570</span>
	<span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u83B7\u53D6\u5206\u9875\u6570\u636E</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6BCF\u9875\u663E\u793A\u7684\u6761\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u8BB0\u5F55\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u9875\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u6709\u4E0A\u4E00\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u6709\u4E0B\u4E00\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38),k=n("p",null,"\u6D4B\u8BD5\u7ED3\u679C\uFF1A",-1),r=s("User(id=1, name=Jone, age=18, "),d=n("a",{href:"mailto:email=test1@baomidou.com"},"email=test1@baomidou.com",-1),m=s(", isDeleted=0) User(id=2, name=Jack, age=20, "),v=n("a",{href:"mailto:email=test2@baomidou.com"},"email=test2@baomidou.com",-1),b=s(", isDeleted=0) User(id=3, name=Tom, age=28, "),g=n("a",{href:"mailto:email=test3@baomidou.com"},"email=test3@baomidou.com",-1),y=s(", isDeleted=0) User(id=4, name=Sandy, age=21, "),h=n("a",{href:"mailto:email=test4@baomidou.com"},"email=test4@baomidou.com",-1),f=s(", isDeleted=0) User(id=5, name=Billie, age=24, email=test5@ba "),q={href:"http://omidou.com",target:"_blank",rel:"noopener noreferrer"},w=s("omidou.com"),E=s(", isDeleted=0)"),S=n("p",null,"\u5F53\u524D\u9875\uFF1A1 \u6BCF\u9875\u663E\u793A\u7684\u6761\u6570\uFF1A5 \u603B\u8BB0\u5F55\u6570\uFF1A17 \u603B\u9875\u6570\uFF1A4 \u662F\u5426\u6709\u4E0A\u4E00 \u9875\uFF1Afalse \u662F\u5426\u6709\u4E0B\u4E00\u9875\uFF1Atrue",-1),W=a(`<h2 id="xml\u81EA\u5B9A\u4E49\u5206\u9875" tabindex="-1"><a class="header-anchor" href="#xml\u81EA\u5B9A\u4E49\u5206\u9875" aria-hidden="true">#</a> xml\u81EA\u5B9A\u4E49\u5206\u9875</h2><h3 id="usermapper\u4E2D\u5B9A\u4E49\u63A5\u53E3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#usermapper\u4E2D\u5B9A\u4E49\u63A5\u53E3\u65B9\u6CD5" aria-hidden="true">#</a> UserMapper\u4E2D\u5B9A\u4E49\u63A5\u53E3\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u6839\u636E\u5E74\u9F84\u67E5\u8BE2\u7528\u6237\u5217\u8868\uFF0C\u5206\u9875\u663E\u793A
* <span class="token keyword">@param</span> <span class="token parameter">page</span> \u5206\u9875\u5BF9\u8C61,xml\u4E2D\u53EF\u4EE5\u4ECE\u91CC\u9762\u8FDB\u884C\u53D6\u503C,\u4F20\u9012\u53C2\u6570 Page \u5373\u81EA\u52A8\u5206\u9875,\u5FC5\u987B\u653E\u5728\u7B2C\u4E00\u4F4D
* <span class="token keyword">@param</span> <span class="token parameter">age</span> \u5E74\u9F84
* <span class="token keyword">@return</span>
*/</span>
<span class="token class-name">IPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectPageVo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">Integer</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usermapper-xml\u4E2D\u7F16\u5199sql" tabindex="-1"><a class="header-anchor" href="#usermapper-xml\u4E2D\u7F16\u5199sql" aria-hidden="true">#</a> UserMapper.xml\u4E2D\u7F16\u5199SQL</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--SQL\u7247\u6BB5\uFF0C\u8BB0\u5F55\u57FA\u7840\u5B57\u6BB5--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseColumns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>id,username,age,email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--IPage&lt;User&gt; selectPageVo(Page&lt;User&gt; page, Integer age);--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectPageVo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	SELECT <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseColumns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span> FROM t_user WHERE age &gt; #{age}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6D4B\u8BD5-1" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5-1" aria-hidden="true">#</a> \u6D4B\u8BD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectPageVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//\u8BBE\u7F6E\u5206\u9875\u53C2\u6570</span>
	<span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	userMapper<span class="token punctuation">.</span><span class="token function">selectPageVo</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u83B7\u53D6\u5206\u9875\u6570\u636E</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6BCF\u9875\u663E\u793A\u7684\u6761\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u8BB0\u5F55\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u9875\u6570\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u6709\u4E0A\u4E00\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u6709\u4E0B\u4E00\u9875\uFF1A&quot;</span><span class="token operator">+</span>page<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u7ED3\u679C\uFF1A</p><p>User(id=3, name=Tom, age=28, <a href="mailto:email=test3@baomidou.com">email=test3@baomidou.com</a>, isDeleted=null) User(id=4, name=Sandy, age=21, <a href="mailto:email=test4@baomidou.com">email=test4@baomidou.com</a>, isDeleted=null) User(id=5, name=Billie, age=24, <a href="mailto:email=test5@baomidou.com">email=test5@baomidou.com</a>, isDeleted=null) User(id=8, name=ybc1, age=21, email=null, isDeleted=null) User(id=9, name=ybc2, age=22, email=null, isDeleted=null)</p><p>\u5F53\u524D\u9875\uFF1A1 \u6BCF\u9875\u663E\u793A\u7684\u6761\u6570\uFF1A5 \u603B\u8BB0\u5F55\u6570\uFF1A12 \u603B\u9875\u6570\uFF1A3 \u662F\u5426\u6709\u4E0A\u4E00\u9875\uFF1Afalse \u662F\u5426\u6709\u4E0B\u4E00\u9875\uFF1Atrue</p></blockquote><h2 id="\u4E50\u89C2\u9501" tabindex="-1"><a class="header-anchor" href="#\u4E50\u89C2\u9501" aria-hidden="true">#</a> \u4E50\u89C2\u9501</h2><h3 id="\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F" aria-hidden="true">#</a> \u573A\u666F</h3><blockquote><p>\u4E00\u4EF6\u5546\u54C1\uFF0C\u6210\u672C\u4EF7\u662F80\u5143\uFF0C\u552E\u4EF7\u662F100\u5143\u3002\u8001\u677F\u5148\u662F\u901A\u77E5\u5C0F\u674E\uFF0C\u8BF4\u4F60\u53BB\u628A\u5546\u54C1\u4EF7\u683C\u589E\u52A050\u5143\u3002\u5C0F \u674E\u6B63\u5728\u73A9\u6E38\u620F\uFF0C\u803D\u6401\u4E86\u4E00\u4E2A\u5C0F\u65F6\u3002\u6B63\u597D\u4E00\u4E2A\u5C0F\u65F6\u540E\uFF0C\u8001\u677F\u89C9\u5F97\u5546\u54C1\u4EF7\u683C\u589E\u52A0\u5230150\u5143\uFF0C\u4EF7\u683C\u592A \u9AD8\uFF0C\u53EF\u80FD\u4F1A\u5F71\u54CD\u9500\u91CF\u3002\u53C8\u901A\u77E5\u5C0F\u738B\uFF0C\u4F60\u628A\u5546\u54C1\u4EF7\u683C\u964D\u4F4E30\u5143\u3002</p><p>\u6B64\u65F6\uFF0C\u5C0F\u674E\u548C\u5C0F\u738B\u540C\u65F6\u64CD\u4F5C\u5546\u54C1\u540E\u53F0\u7CFB\u7EDF\u3002\u5C0F\u674E\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u7CFB\u7EDF\u5148\u53D6\u51FA\u5546\u54C1\u4EF7\u683C100\u5143\uFF1B\u5C0F\u738B \u4E5F\u5728\u64CD\u4F5C\uFF0C\u53D6\u51FA\u7684\u5546\u54C1\u4EF7\u683C\u4E5F\u662F100\u5143\u3002\u5C0F\u674E\u5C06\u4EF7\u683C\u52A0\u4E8650\u5143\uFF0C\u5E76\u5C06100+50=150\u5143\u5B58\u5165\u4E86\u6570\u636E \u5E93\uFF1B\u5C0F\u738B\u5C06\u5546\u54C1\u51CF\u4E8630\u5143\uFF0C\u5E76\u5C06100-30=70\u5143\u5B58\u5165\u4E86\u6570\u636E\u5E93\u3002\u662F\u7684\uFF0C\u5982\u679C\u6CA1\u6709\u9501\uFF0C\u5C0F\u674E\u7684\u64CD\u4F5C\u5C31 \u5B8C\u5168\u88AB\u5C0F\u738B\u7684\u8986\u76D6\u4E86\u3002</p><p>\u73B0\u5728\u5546\u54C1\u4EF7\u683C\u662F70\u5143\uFF0C\u6BD4\u6210\u672C\u4EF7\u4F4E10\u5143\u3002\u51E0\u5206\u949F\u540E\uFF0C\u8FD9\u4E2A\u5546\u54C1\u5F88\u5FEB\u51FA\u552E\u4E861\u5343\u591A\u4EF6\u5546\u54C1\uFF0C\u8001\u677F\u4E8F1 \u4E07\u591A</p></blockquote><h3 id="\u4E50\u89C2\u9501\u4E0E\u60B2\u89C2\u9501" tabindex="-1"><a class="header-anchor" href="#\u4E50\u89C2\u9501\u4E0E\u60B2\u89C2\u9501" aria-hidden="true">#</a> \u4E50\u89C2\u9501\u4E0E\u60B2\u89C2\u9501</h3><blockquote><p>\u4E0A\u9762\u7684\u6545\u4E8B\uFF0C\u5982\u679C\u662F\u4E50\u89C2\u9501\uFF0C\u5C0F\u738B\u4FDD\u5B58\u4EF7\u683C\u524D\uFF0C\u4F1A\u68C0\u67E5\u4E0B\u4EF7\u683C\u662F\u5426\u88AB\u4EBA\u4FEE\u6539\u8FC7\u4E86\u3002\u5982\u679C\u88AB\u4FEE\u6539\u8FC7 \u4E86\uFF0C\u5219\u91CD\u65B0\u53D6\u51FA\u7684\u88AB\u4FEE\u6539\u540E\u7684\u4EF7\u683C\uFF0C150\u5143\uFF0C\u8FD9\u6837\u4ED6\u4F1A\u5C06120\u5143\u5B58\u5165\u6570\u636E\u5E93\u3002</p><p>\u5982\u679C\u662F\u60B2\u89C2\u9501\uFF0C\u5C0F\u674E\u53D6\u51FA\u6570\u636E\u540E\uFF0C\u5C0F\u738B\u53EA\u80FD\u7B49\u5C0F\u674E\u64CD\u4F5C\u5B8C\u4E4B\u540E\uFF0C\u624D\u80FD\u5BF9\u4EF7\u683C\u8FDB\u884C\u64CD\u4F5C\uFF0C\u4E5F\u4F1A\u4FDD\u8BC1 \u6700\u7EC8\u7684\u4EF7\u683C\u662F120\u5143\u3002</p></blockquote><h3 id="\u6A21\u62DF\u4FEE\u6539\u51B2\u7A81" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u4FEE\u6539\u51B2\u7A81" aria-hidden="true">#</a> \u6A21\u62DF\u4FEE\u6539\u51B2\u7A81</h3><p><strong>\u6570\u636E\u5E93\u4E2D\u589E\u52A0\u5546\u54C1\u8868</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> t_product
<span class="token punctuation">(</span>
	id <span class="token keyword">BIGINT</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;\u4E3B\u952EID&#39;</span><span class="token punctuation">,</span>
	NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;\u5546\u54C1\u540D\u79F0&#39;</span><span class="token punctuation">,</span>
	price <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;\u4EF7\u683C&#39;</span><span class="token punctuation">,</span>
	VERSION <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;\u4E50\u89C2\u9501\u7248\u672C\u53F7&#39;</span><span class="token punctuation">,</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6DFB\u52A0\u6570\u636E</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_product <span class="token punctuation">(</span>id<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> price<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5916\u661F\u4EBA\u7B14\u8BB0\u672C&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u6DFB\u52A0\u5B9E\u4F53</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> price<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> version<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6DFB\u52A0mapper</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6D4B\u8BD5</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConcurrentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//1\u3001\u5C0F\u674E</span>
	<span class="token class-name">Product</span> p1 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u674E\u53D6\u51FA\u7684\u4EF7\u683C\uFF1A&quot;</span> <span class="token operator">+</span> p1<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//2\u3001\u5C0F\u738B</span>
	<span class="token class-name">Product</span> p2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u738B\u53D6\u51FA\u7684\u4EF7\u683C\uFF1A&quot;</span> <span class="token operator">+</span> p2<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//3\u3001\u5C0F\u674E\u5C06\u4EF7\u683C\u52A0\u4E8650\u5143\uFF0C\u5B58\u5165\u4E86\u6570\u636E\u5E93</span>
	p1<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result1 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u674E\u4FEE\u6539\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> result1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//4\u3001\u5C0F\u738B\u5C06\u5546\u54C1\u51CF\u4E8630\u5143\uFF0C\u5B58\u5165\u4E86\u6570\u636E\u5E93</span>
	p2<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u738B\u4FEE\u6539\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> result2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6700\u540E\u7684\u7ED3\u679C</span>
	<span class="token class-name">Product</span> p3 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u4EF7\u683C\u8986\u76D6\uFF0C\u6700\u540E\u7684\u7ED3\u679C\uFF1A70</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u540E\u7684\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> p3<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E50\u89C2\u9501\u5B9E\u73B0\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E50\u89C2\u9501\u5B9E\u73B0\u6D41\u7A0B" aria-hidden="true">#</a> \u4E50\u89C2\u9501\u5B9E\u73B0\u6D41\u7A0B</h3><blockquote><p>\u6570\u636E\u5E93\u4E2D\u6DFB\u52A0version\u5B57\u6BB5</p><p>\u53D6\u51FA\u8BB0\u5F55\u65F6\uFF0C\u83B7\u53D6\u5F53\u524Dversion</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>price<span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>version<span class="token punctuation">\`</span></span> <span class="token keyword">FROM</span> product <span class="token keyword">WHERE</span> id<span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u66F4\u65B0\u65F6\uFF0Cversion + 1\uFF0C\u5982\u679Cwhere\u8BED\u53E5\u4E2D\u7684version\u7248\u672C\u4E0D\u5BF9\uFF0C\u5219\u66F4\u65B0\u5931\u8D25</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> product <span class="token keyword">SET</span> price<span class="token operator">=</span>price<span class="token operator">+</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>version<span class="token punctuation">\`</span></span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">\`</span>version<span class="token punctuation">\`</span></span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>version<span class="token punctuation">\`</span></span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h3 id="mybatis-plus\u5B9E\u73B0\u4E50\u89C2\u9501" tabindex="-1"><a class="header-anchor" href="#mybatis-plus\u5B9E\u73B0\u4E50\u89C2\u9501" aria-hidden="true">#</a> Mybatis-Plus\u5B9E\u73B0\u4E50\u89C2\u9501</h3><p><strong>\u4FEE\u6539\u5B9E\u4F53\u7C7B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Version</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> price<span class="token punctuation">;</span>
	<span class="token annotation punctuation">@Version</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> version<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6DFB\u52A0\u4E50\u89C2\u9501\u63D2\u4EF6\u914D\u7F6E</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6DFB\u52A0\u5206\u9875\u63D2\u4EF6</span>
	interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span>
	<span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span>MYSQL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u6DFB\u52A0\u4E50\u89C2\u9501\u63D2\u4EF6</span>
	interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OptimisticLockerInnerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6D4B\u8BD5\u4FEE\u6539\u51B2\u7A81</strong></p><blockquote><p>\u5C0F\u674E\u67E5\u8BE2\u5546\u54C1\u4FE1\u606F\uFF1A</p><p>SELECT id,name,price,version FROM t_product WHERE id=?</p><p>\u5C0F\u738B\u67E5\u8BE2\u5546\u54C1\u4FE1\u606F\uFF1A</p><p>SELECT id,name,price,version FROM t_product WHERE id=?</p><p>\u5C0F\u674E\u4FEE\u6539\u5546\u54C1\u4EF7\u683C\uFF0C\u81EA\u52A8\u5C06version+1</p><p>UPDATE t_product SET name=?, price=?, version=? WHERE id=? AND version=? Parameters: \u5916\u661F\u4EBA\u7B14\u8BB0\u672C(String), 150(Integer), 1(Integer), 1(Long), 0(Integer)</p><p>\u5C0F\u738B\u4FEE\u6539\u5546\u54C1\u4EF7\u683C\uFF0C\u6B64\u65F6version\u5DF2\u66F4\u65B0\uFF0C\u6761\u4EF6\u4E0D\u6210\u7ACB\uFF0C\u4FEE\u6539\u5931\u8D25</p><p>UPDATE t_product SET name=?, price=?, version=? WHERE id=? AND version=? Parameters: \u5916\u661F\u4EBA\u7B14\u8BB0\u672C(String), 70(Integer), 1(Integer), 1(Long), 0(Integer)</p><p>\u6700\u7EC8\uFF0C\u5C0F\u738B\u4FEE\u6539\u5931\u8D25\uFF0C\u67E5\u8BE2\u4EF7\u683C\uFF1A150</p><p>SELECT id,name,price,version FROM t_product WHERE id=?</p></blockquote><p><strong>\u4F18\u5316\u6D41\u7A0B</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConcurrentVersionUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u5C0F\u674E\u53D6\u6570\u636E</span>
	<span class="token class-name">Product</span> p1 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5C0F\u738B\u53D6\u6570\u636E</span>
	<span class="token class-name">Product</span> p2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5C0F\u674E\u4FEE\u6539 + 50</span>
	p1<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result1 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u674E\u4FEE\u6539\u7684\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> result1<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u5C0F\u738B\u4FEE\u6539 - 30</span>
	p2<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> result2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u738B\u4FEE\u6539\u7684\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> result2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>result2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//\u5931\u8D25\u91CD\u8BD5\uFF0C\u91CD\u65B0\u83B7\u53D6version\u5E76\u66F4\u65B0</span>
		p2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		p2<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result2 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u738B\u4FEE\u6539\u91CD\u8BD5\u7684\u7ED3\u679C\uFF1A&quot;</span> <span class="token operator">+</span> result2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//\u8001\u677F\u770B\u4EF7\u683C</span>
	<span class="token class-name">Product</span> p3 <span class="token operator">=</span> productMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8001\u677F\u770B\u4EF7\u683C\uFF1A&quot;</span> <span class="token operator">+</span> p3<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35);function U(L,_){const t=l("ExternalLinkIcon");return e(),o("div",null,[i,n("blockquote",null,[k,n("p",null,[r,d,m,v,b,g,y,h,f,n("a",q,[w,c(t)]),E]),S]),W])}var M=p(u,[["render",U],["__file","chapter3.html.vue"]]);export{M as default};
