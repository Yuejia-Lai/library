import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.d6224ea7.js";const e={},p=t(`<p>\u4F7F\u7528\u914D\u7F6E\u7C7B\u548C\u6CE8\u89E3\u4EE3\u66FFweb.xml\u548CSpringMVC\u914D\u7F6E\u6587\u4EF6\u7684\u529F\u80FD</p><h2 id="\u521B\u5EFA\u521D\u59CB\u5316\u7C7B-\u4EE3\u66FFweb-xml" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u521D\u59CB\u5316\u7C7B-\u4EE3\u66FFweb-xml" aria-hidden="true">#</a> \u521B\u5EFA\u521D\u59CB\u5316\u7C7B\uFF0C\u4EE3\u66FFweb.xml</h2><p>\u5728Servlet3.0\u73AF\u5883\u4E2D\uFF0C\u5BB9\u5668\u4F1A\u5728\u7C7B\u8DEF\u5F84\u4E2D\u67E5\u627E\u5B9E\u73B0javax.servlet.ServletContainerInitializer\u63A5\u53E3\u7684\u7C7B\uFF0C \u5982\u679C\u627E\u5230\u7684\u8BDD\u5C31\u7528\u5B83\u6765\u914D\u7F6EServlet\u5BB9\u5668\u3002</p><p>Spring\u63D0\u4F9B\u4E86\u8FD9\u4E2A\u63A5\u53E3\u7684\u5B9E\u73B0\uFF0C\u540D\u4E3A SpringServletContainerInitializer\uFF0C\u8FD9\u4E2A\u7C7B\u53CD\u8FC7\u6765\u53C8\u4F1A\u67E5\u627E\u5B9E\u73B0WebApplicationInitializer\u7684\u7C7B\u5E76\u5C06\u914D\u7F6E\u7684\u4EFB\u52A1\u4EA4\u7ED9\u5B83\u4EEC\u6765\u5B8C\u6210\u3002</p><p>Spring3.2\u5F15\u5165\u4E86\u4E00\u4E2A\u4FBF\u5229\u7684WebApplicationInitializer\u57FA\u7840\u5B9E\u73B0\uFF0C\u540D\u4E3A AbstractAnnotationConfigDispatcherServletInitializer\uFF0C\u5F53\u6211\u4EEC\u7684\u7C7B\u6269\u5C55\u4E86 AbstractAnnotationConfigDispatcherServletInitializer\u5E76\u5C06\u5176\u90E8\u7F72\u5230Servlet3.0\u5BB9\u5668\u7684\u65F6\u5019\uFF0C\u5BB9\u5668\u4F1A\u81EA\u52A8\u53D1\u73B0\u5B83\uFF0C\u5E76\u7528\u5B83\u6765\u914D\u7F6EServlet\u4E0A\u4E0B\u6587</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebInit</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
		* \u6307\u5B9Aspring\u7684\u914D\u7F6E\u7C7B
		* <span class="token keyword">@return</span>
	*/</span>

    <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getRootConfigClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">SpringConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
		* \u6307\u5B9ASpringMVC\u7684\u914D\u7F6E\u7C7B
		* <span class="token keyword">@return</span>
	*/</span>

    <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletConfigClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
		* \u6307\u5B9ADispatcherServlet\u7684\u6620\u5C04\u89C4\u5219\uFF0C\u5373url-pattern
		* <span class="token keyword">@return</span>
	*/</span>

    <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
		* \u6DFB\u52A0\u8FC7\u6EE4\u5668
		* <span class="token keyword">@return</span>
	*/</span>

    <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">Filter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getServletFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CharacterEncodingFilter</span> encodingFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		encodingFilter<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		encodingFilter<span class="token punctuation">.</span><span class="token function">setForceRequestEncoding</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">HiddenHttpMethodFilter</span> hiddenHttpMethodFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HiddenHttpMethodFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Filter</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>encodingFilter<span class="token punctuation">,</span> hiddenHttpMethodFilter<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521B\u5EFAspringconfig\u914D\u7F6E\u7C7B-\u4EE3\u66FFspring\u7684\u914D\u7F6E\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAspringconfig\u914D\u7F6E\u7C7B-\u4EE3\u66FFspring\u7684\u914D\u7F6E\u6587\u4EF6" aria-hidden="true">#</a> \u521B\u5EFASpringConfig\u914D\u7F6E\u7C7B\uFF0C\u4EE3\u66FFspring\u7684\u914D\u7F6E\u6587\u4EF6</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringConfig</span> <span class="token punctuation">{</span>
	<span class="token comment">//ssm\u6574\u5408\u4E4B\u540E\uFF0Cspring\u7684\u914D\u7F6E\u4FE1\u606F\u5199\u5728\u6B64\u7C7B\u4E2D</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521B\u5EFAwebconfig\u914D\u7F6E\u7C7B-\u4EE3\u66FFspringmvc\u7684\u914D\u7F6E\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAwebconfig\u914D\u7F6E\u7C7B-\u4EE3\u66FFspringmvc\u7684\u914D\u7F6E\u6587\u4EF6" aria-hidden="true">#</a> \u521B\u5EFAWebConfig\u914D\u7F6E\u7C7B\uFF0C\u4EE3\u66FFSpringMVC\u7684\u914D\u7F6E\u6587\u4EF6</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token comment">//\u626B\u63CF\u7EC4\u4EF6</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.atguigu.mvc.controller&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//\u5F00\u542FMVC\u6CE8\u89E3\u9A71\u52A8</span>
<span class="token annotation punctuation">@EnableWebMvc</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u4F7F\u7528\u9ED8\u8BA4\u7684servlet\u5904\u7406\u9759\u6001\u8D44\u6E90</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureDefaultServletHandling</span><span class="token punctuation">(</span><span class="token class-name">DefaultServletHandlerConfigurer</span> configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		configurer<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
    <span class="token comment">//\u914D\u7F6E\u6587\u4EF6\u4E0A\u4F20\u89E3\u6790\u5668</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">CommonsMultipartResolver</span> <span class="token function">multipartResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonsMultipartResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token comment">//\u914D\u7F6E\u62E6\u622A\u5668</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">FirstInterceptor</span> firstInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FirstInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>firstInterceptor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token comment">//\u914D\u7F6E\u89C6\u56FE\u63A7\u5236</span>
	<span class="token comment">/*@Override
	public void addViewControllers(ViewControllerRegistry registry) {
		registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);
	}*/</span>

    <span class="token comment">//\u914D\u7F6E\u5F02\u5E38\u6620\u5C04</span>
	<span class="token comment">/*@Override
	public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; resolvers) {
		SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver();
		Properties prop = new Properties();
		prop.setProperty(&quot;java.lang.ArithmeticException&quot;, &quot;error&quot;);
		//\u8BBE\u7F6E\u5F02\u5E38\u6620\u5C04
		exceptionResolver.setExceptionMappings(prop);
		//\u8BBE\u7F6E\u5171\u4EAB\u5F02\u5E38\u4FE1\u606F\u7684\u952E
		exceptionResolver.setExceptionAttribute(&quot;ex&quot;);
		resolvers.add(exceptionResolver);
	}*/</span>

    <span class="token comment">//\u914D\u7F6E\u751F\u6210\u6A21\u677F\u89E3\u6790\u5668</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">ITemplateResolver</span> <span class="token function">templateResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">WebApplicationContext</span> webApplicationContext <span class="token operator">=</span>
		<span class="token class-name">ContextLoader</span><span class="token punctuation">.</span><span class="token function">getCurrentWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// ServletContextTemplateResolver\u9700\u8981\u4E00\u4E2AServletContext\u4F5C\u4E3A\u6784\u9020\u53C2\u6570\uFF0C\u53EF\u901A\u8FC7WebApplicationContext \u7684\u65B9\u6CD5\u83B7\u5F97</span>
		<span class="token class-name">ServletContextTemplateResolver</span> templateResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletContextTemplateResolver</span><span class="token punctuation">(</span>
		webApplicationContext<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templateResolver<span class="token punctuation">.</span><span class="token function">setPrefix</span><span class="token punctuation">(</span><span class="token string">&quot;/WEB-INF/templates/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templateResolver<span class="token punctuation">.</span><span class="token function">setSuffix</span><span class="token punctuation">(</span><span class="token string">&quot;.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templateResolver<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templateResolver<span class="token punctuation">.</span><span class="token function">setTemplateMode</span><span class="token punctuation">(</span><span class="token class-name">TemplateMode</span><span class="token punctuation">.</span>HTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> templateResolver<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token comment">//\u751F\u6210\u6A21\u677F\u5F15\u64CE\u5E76\u4E3A\u6A21\u677F\u5F15\u64CE\u6CE8\u5165\u6A21\u677F\u89E3\u6790\u5668</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">SpringTemplateEngine</span> <span class="token function">templateEngine</span><span class="token punctuation">(</span><span class="token class-name">ITemplateResolver</span>
		templateResolver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SpringTemplateEngine</span> templateEngine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringTemplateEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templateEngine<span class="token punctuation">.</span><span class="token function">setTemplateResolver</span><span class="token punctuation">(</span>templateResolver<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> templateEngine<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token comment">//\u751F\u6210\u89C6\u56FE\u89E3\u6790\u5668\u5E76\u672A\u89E3\u6790\u5668\u6CE8\u5165\u6A21\u677F\u5F15\u64CE</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">ViewResolver</span> <span class="token function">viewResolver</span><span class="token punctuation">(</span><span class="token class-name">SpringTemplateEngine</span> templateEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ThymeleafViewResolver</span> viewResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThymeleafViewResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		viewResolver<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		viewResolver<span class="token punctuation">.</span><span class="token function">setTemplateEngine</span><span class="token punctuation">(</span>templateEngine<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> viewResolver<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6D4B\u8BD5\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u529F\u80FD" aria-hidden="true">#</a> \u6D4B\u8BD5\u529F\u80FD</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token string">&quot;index&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="springmvc\u5E38\u7528\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#springmvc\u5E38\u7528\u7EC4\u4EF6" aria-hidden="true">#</a> SpringMVC\u5E38\u7528\u7EC4\u4EF6</h2><ul><li>DispatcherServlet\uFF1A<strong>\u524D\u7AEF\u63A7\u5236\u5668</strong>\uFF0C\u4E0D\u9700\u8981\u5DE5\u7A0B\u5E08\u5F00\u53D1\uFF0C\u7531\u6846\u67B6\u63D0\u4F9B</li></ul><p>\u4F5C\u7528\uFF1A\u7EDF\u4E00\u5904\u7406\u8BF7\u6C42\u548C\u54CD\u5E94\uFF0C\u6574\u4E2A\u6D41\u7A0B\u63A7\u5236\u7684\u4E2D\u5FC3\uFF0C\u7531\u5B83\u8C03\u7528\u5176\u5B83\u7EC4\u4EF6\u5904\u7406\u7528\u6237\u7684\u8BF7\u6C42</p><ul><li>HandlerMapping\uFF1A<strong>\u5904\u7406\u5668\u6620\u5C04\u5668</strong>\uFF0C\u4E0D\u9700\u8981\u5DE5\u7A0B\u5E08\u5F00\u53D1\uFF0C\u7531\u6846\u67B6\u63D0\u4F9B</li></ul><p>\u4F5C\u7528\uFF1A\u6839\u636E\u8BF7\u6C42\u7684url\u3001method\u7B49\u4FE1\u606F\u67E5\u627EHandler\uFF0C\u5373\u63A7\u5236\u5668\u65B9\u6CD5</p><ul><li>Handler\uFF1A<strong>\u5904\u7406\u5668</strong>\uFF0C\u9700\u8981\u5DE5\u7A0B\u5E08\u5F00\u53D1</li></ul><p>\u4F5C\u7528\uFF1A\u5728DispatcherServlet\u7684\u63A7\u5236\u4E0BHandler\u5BF9\u5177\u4F53\u7684\u7528\u6237\u8BF7\u6C42\u8FDB\u884C\u5904\u7406</p><ul><li>HandlerAdapter\uFF1A<strong>\u5904\u7406\u5668\u9002\u914D\u5668</strong>\uFF0C\u4E0D\u9700\u8981\u5DE5\u7A0B\u5E08\u5F00\u53D1\uFF0C\u7531\u6846\u67B6\u63D0\u4F9B</li></ul><p>\u4F5C\u7528\uFF1A\u901A\u8FC7HandlerAdapter\u5BF9\u5904\u7406\u5668\uFF08\u63A7\u5236\u5668\u65B9\u6CD5\uFF09\u8FDB\u884C\u6267\u884C</p><ul><li>ViewResolver\uFF1A<strong>\u89C6\u56FE\u89E3\u6790\u5668</strong>\uFF0C\u4E0D\u9700\u8981\u5DE5\u7A0B\u5E08\u5F00\u53D1\uFF0C\u7531\u6846\u67B6\u63D0\u4F9B</li></ul><p>\u4F5C\u7528\uFF1A\u8FDB\u884C\u89C6\u56FE\u89E3\u6790\uFF0C\u5F97\u5230\u76F8\u5E94\u7684\u89C6\u56FE\uFF0C\u4F8B\u5982\uFF1AThymeleafView\u3001InternalResourceView\u3001 RedirectView</p><ul><li>View\uFF1A<strong>\u89C6\u56FE</strong></li></ul><p>\u4F5C\u7528\uFF1A\u5C06\u6A21\u578B\u6570\u636E\u901A\u8FC7\u9875\u9762\u5C55\u793A\u7ED9\u7528\u6237</p><h2 id="dispatcherservlet\u521D\u59CB\u5316\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#dispatcherservlet\u521D\u59CB\u5316\u8FC7\u7A0B" aria-hidden="true">#</a> DispatcherServlet\u521D\u59CB\u5316\u8FC7\u7A0B</h2><p>DispatcherServlet \u672C\u8D28\u4E0A\u662F\u4E00\u4E2A Servlet\uFF0C\u6240\u4EE5\u5929\u7136\u7684\u9075\u5FAA Servlet \u7684\u751F\u547D\u5468\u671F\u3002\u6240\u4EE5\u5B8F\u89C2\u4E0A\u662F Servlet \u751F\u547D\u5468\u671F\u6765\u8FDB\u884C\u8C03\u5EA6</p><p><strong>\u2460\u521D\u59CB\u5316WebApplicationContext</strong></p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.FrameworkServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">WebApplicationContext</span> <span class="token function">initWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">WebApplicationContext</span> rootContext <span class="token operator">=</span> <span class="token class-name">WebApplicationContextUtils</span><span class="token punctuation">.</span><span class="token function">getWebApplicationContext</span><span class="token punctuation">(</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">WebApplicationContext</span> wac <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webApplicationContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// A context instance was injected at construction time -&gt; use it</span>
		wac <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>webApplicationContext<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>wac <span class="token keyword">instanceof</span> <span class="token class-name">ConfigurableWebApplicationContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ConfigurableWebApplicationContext</span> cwac <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableWebApplicationContext</span><span class="token punctuation">)</span> wac<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cwac<span class="token punctuation">.</span><span class="token function">isActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// The context has not yet been refreshed -&gt; provide services such as</span>
		<span class="token comment">// setting the parent context, setting the application context id, etc</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>cwac<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// The context instance was injected without an explicit parent -&gt; set</span>
		<span class="token comment">// the root application context (if any; may be null) as the parent</span>
		cwac<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

        <span class="token function">configureAndRefreshWebApplicationContext</span><span class="token punctuation">(</span>cwac<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>wac <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// No context instance was injected at construction time -&gt; see if one</span>
	<span class="token comment">// has been registered in the servlet context. If one exists, it is assumed</span>
	<span class="token comment">// that the parent context (if any) has already been set and that the</span>
	<span class="token comment">// user has performed any initialization such as setting the context id</span>
	wac <span class="token operator">=</span> <span class="token function">findWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>wac <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// No context instance is defined for this servlet -&gt; create a local one</span>
	<span class="token comment">// \u521B\u5EFAWebApplicationContext</span>
	wac <span class="token operator">=</span> <span class="token function">createWebApplicationContext</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>refreshEventReceived<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Either the context is not a ConfigurableApplicationContext with refresh</span>
		<span class="token comment">// support or the context injected at construction time had already been</span>
		<span class="token comment">// refreshed -&gt; trigger initial onRefresh manually here.</span>
		<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onRefreshMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5237\u65B0WebApplicationContext</span>
		<span class="token function">onRefresh</span><span class="token punctuation">(</span>wac<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>publishContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Publish the context as a servlet context attribute.</span>
		<span class="token comment">// \u5C06IOC\u5BB9\u5668\u5728\u5E94\u7528\u57DF\u5171\u4EAB</span>
		<span class="token class-name">String</span> attrName <span class="token operator">=</span> <span class="token function">getServletContextAttributeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>attrName<span class="token punctuation">,</span> wac<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> wac<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u2461\u521B\u5EFAWebApplicationContext</strong></p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.FrameworkServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">WebApplicationContext</span> <span class="token function">createWebApplicationContext</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span>
<span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> contextClass <span class="token operator">=</span> <span class="token function">getContextClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ConfigurableWebApplicationContext</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>contextClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationContextException</span><span class="token punctuation">(</span>
		<span class="token string">&quot;Fatal initialization error in servlet with name &#39;&quot;</span> <span class="token operator">+</span> <span class="token function">getServletName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;: custom WebApplicationContext class [&quot;</span> <span class="token operator">+</span> contextClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] is not of type ConfigurableWebApplicationContext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u901A\u8FC7\u53CD\u5C04\u521B\u5EFA IOC \u5BB9\u5668\u5BF9\u8C61</span>
	<span class="token class-name">ConfigurableWebApplicationContext</span> wac <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConfigurableWebApplicationContext</span><span class="token punctuation">)</span>
	<span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">instantiateClass</span><span class="token punctuation">(</span>contextClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
	wac<span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8BBE\u7F6E\u7236\u5BB9\u5668</span>
	wac<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> configLocation <span class="token operator">=</span> <span class="token function">getContextConfigLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>configLocation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		wac<span class="token punctuation">.</span><span class="token function">setConfigLocation</span><span class="token punctuation">(</span>configLocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">configureAndRefreshWebApplicationContext</span><span class="token punctuation">(</span>wac<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> wac<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u2462DispatcherServlet\u521D\u59CB\u5316\u7B56\u7565</strong></p><p>FrameworkServlet\u521B\u5EFAWebApplicationContext\u540E\uFF0C\u5237\u65B0\u5BB9\u5668\uFF0C\u8C03\u7528onRefresh(wac)\uFF0C\u6B64\u65B9\u6CD5\u5728 DispatcherServlet\u4E2D\u8FDB\u884C\u4E86\u91CD\u5199\uFF0C\u8C03\u7528\u4E86initStrategies(context)\u65B9\u6CD5\uFF0C\u521D\u59CB\u5316\u7B56\u7565\uFF0C\u5373\u521D\u59CB\u5316 DispatcherServlet\u7684\u5404\u4E2A\u7EC4\u4EF6</p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.DispatcherServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initStrategies</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">initMultipartResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initLocaleResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initThemeResolver</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initHandlerMappings</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initHandlerAdapters</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initHandlerExceptionResolvers</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initRequestToViewNameTranslator</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initViewResolvers</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initFlashMapManager</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dispatcherservlet\u8C03\u7528\u7EC4\u4EF6\u5904\u7406\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#dispatcherservlet\u8C03\u7528\u7EC4\u4EF6\u5904\u7406\u8BF7\u6C42" aria-hidden="true">#</a> DispatcherServlet\u8C03\u7528\u7EC4\u4EF6\u5904\u7406\u8BF7\u6C42</h2><p><strong>\u2460processRequest()</strong></p><p>FrameworkServlet\u91CD\u5199HttpServlet\u4E2D\u7684service()\u548CdoXxx()\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u4E2D\u8C03\u7528\u4E86 processRequest(request, response)</p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.FrameworkServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
<span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
	<span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Throwable</span> failureCause <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">LocaleContext</span> previousLocaleContext <span class="token operator">=</span> <span class="token class-name">LocaleContextHolder</span><span class="token punctuation">.</span><span class="token function">getLocaleContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">LocaleContext</span> localeContext <span class="token operator">=</span> <span class="token function">buildLocaleContext</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">RequestAttributes</span> previousAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">ServletRequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token function">buildRequestAttributes</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> previousAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">WebAsyncManager</span> asyncManager <span class="token operator">=</span> <span class="token class-name">WebAsyncUtils</span><span class="token punctuation">.</span><span class="token function">getAsyncManager</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	asyncManager<span class="token punctuation">.</span><span class="token function">registerCallableInterceptor</span><span class="token punctuation">(</span><span class="token class-name">FrameworkServlet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RequestBindingInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">initContextHolders</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> localeContext<span class="token punctuation">,</span> requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u6267\u884C\u670D\u52A1\uFF0CdoService()\u662F\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5728DispatcherServlet\u4E2D\u8FDB\u884C\u4E86\u91CD\u5199</span>
		<span class="token function">doService</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ServletException</span> <span class="token operator">|</span> <span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		failureCause <span class="token operator">=</span> ex<span class="token punctuation">;</span>
		<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		failureCause <span class="token operator">=</span> ex<span class="token punctuation">;</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">&quot;Request processing failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token function">resetContextHolders</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> previousLocaleContext<span class="token punctuation">,</span> previousAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>requestAttributes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	requestAttributes<span class="token punctuation">.</span><span class="token function">requestCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">logResult</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> failureCause<span class="token punctuation">,</span> asyncManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">publishRequestHandledEvent</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> failureCause<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u2461doService()</strong></p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.DispatcherServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doService</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token function">logRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Keep a snapshot of the request attributes in case of an include,</span>
	<span class="token comment">// to be able to restore the original attributes after the include.</span>
	<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> attributesSnapshot <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">WebUtils</span><span class="token punctuation">.</span><span class="token function">isIncludeRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		attributesSnapshot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> attrNames <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAttributeNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>attrNames<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> attrName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> attrNames<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cleanupAfterInclude <span class="token operator">||</span> attrName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>DEFAULT_STRATEGIES_PREFIX<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				attributesSnapshot<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>attrName<span class="token punctuation">,</span>
				request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token comment">// Make framework objects available to handlers and view objects.</span>
	request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>WEB_APPLICATION_CONTEXT_ATTRIBUTE<span class="token punctuation">,</span> <span class="token function">getWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>LOCALE_RESOLVER_ATTRIBUTE<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>localeResolver<span class="token punctuation">)</span><span class="token punctuation">;</span>
	request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>THEME_RESOLVER_ATTRIBUTE<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>themeResolver<span class="token punctuation">)</span><span class="token punctuation">;</span>
	request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>THEME_SOURCE_ATTRIBUTE<span class="token punctuation">,</span> <span class="token function">getThemeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flashMapManager <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">FlashMap</span> inputFlashMap <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flashMapManager<span class="token punctuation">.</span><span class="token function">retrieveAndUpdate</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>inputFlashMap <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>INPUT_FLASH_MAP_ATTRIBUTE<span class="token punctuation">,</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span>inputFlashMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
		request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>OUTPUT_FLASH_MAP_ATTRIBUTE<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FlashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>FLASH_MAP_MANAGER_ATTRIBUTE<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flashMapManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">RequestPath</span> requestPath <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parseRequestPath <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ServletRequestPathUtils</span><span class="token punctuation">.</span><span class="token function">hasParsedRequestPath</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		requestPath <span class="token operator">=</span> <span class="token class-name">ServletRequestPathUtils</span><span class="token punctuation">.</span><span class="token function">parseAndCache</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5904\u7406\u8BF7\u6C42\u548C\u54CD\u5E94</span>
		<span class="token function">doDispatch</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">finally</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">WebAsyncUtils</span><span class="token punctuation">.</span><span class="token function">getAsyncManager</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Restore the original attribute snapshot, in case of an include.</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>attributesSnapshot <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">restoreAttributesAfterInclude</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> attributesSnapshot<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>requestPath <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ServletRequestPathUtils</span><span class="token punctuation">.</span><span class="token function">clearParsedRequestPath</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u2462doDispatch()</strong></p><p>\u6240\u5728\u7C7B\uFF1Aorg.springframework.web.servlet.DispatcherServlet</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doDispatch</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token class-name">HttpServletRequest</span> processedRequest <span class="token operator">=</span> request<span class="token punctuation">;</span>
	<span class="token class-name">HandlerExecutionChain</span> mappedHandler <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> multipartRequestParsed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token class-name">WebAsyncManager</span> asyncManager <span class="token operator">=</span> <span class="token class-name">WebAsyncUtils</span><span class="token punctuation">.</span><span class="token function">getAsyncManager</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token class-name">ModelAndView</span> mv <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Exception</span> dispatchException <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			processedRequest <span class="token operator">=</span> <span class="token function">checkMultipart</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
			multipartRequestParsed <span class="token operator">=</span> <span class="token punctuation">(</span>processedRequest <span class="token operator">!=</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// Determine handler for the current request.</span>
			<span class="token comment">/*
				mappedHandler\uFF1A\u8C03\u7528\u94FE
				\u5305\u542Bhandler\u3001interceptorList\u3001interceptorIndex
				handler\uFF1A\u6D4F\u89C8\u5668\u53D1\u9001\u7684\u8BF7\u6C42\u6240\u5339\u914D\u7684\u63A7\u5236\u5668\u65B9\u6CD5
				interceptorList\uFF1A\u5904\u7406\u63A7\u5236\u5668\u65B9\u6CD5\u7684\u6240\u6709\u62E6\u622A\u5668\u96C6\u5408
				interceptorIndex\uFF1A\u62E6\u622A\u5668\u7D22\u5F15\uFF0C\u63A7\u5236\u62E6\u622A\u5668afterCompletion()\u7684\u6267\u884C
			*/</span>
			mappedHandler <span class="token operator">=</span> <span class="token function">getHandler</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mappedHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">noHandlerFound</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
            <span class="token comment">// Determine handler adapter for the current request.</span>
			<span class="token comment">// \u901A\u8FC7\u63A7\u5236\u5668\u65B9\u6CD5\u521B\u5EFA\u76F8\u5E94\u7684\u5904\u7406\u5668\u9002\u914D\u5668\uFF0C\u8C03\u7528\u6240\u5BF9\u5E94\u7684\u63A7\u5236\u5668\u65B9\u6CD5</span>
			<span class="token class-name">HandlerAdapter</span> ha <span class="token operator">=</span> <span class="token function">getHandlerAdapter</span><span class="token punctuation">(</span>mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// Process last-modified header, if supported by the handler.</span>
			<span class="token class-name">String</span> method <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">boolean</span> isGet <span class="token operator">=</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>isGet <span class="token operator">||</span> <span class="token string">&quot;HEAD&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">long</span> lastModified <span class="token operator">=</span> ha<span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>
				mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">checkNotModified</span><span class="token punctuation">(</span>lastModified<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isGet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u8C03\u7528\u62E6\u622A\u5668\u7684preHandle()</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mappedHandler<span class="token punctuation">.</span><span class="token function">applyPreHandle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
   	 	<span class="token comment">// Actually invoke the handler.</span>
		<span class="token comment">// \u7531\u5904\u7406\u5668\u9002\u914D\u5668\u8C03\u7528\u5177\u4F53\u7684\u63A7\u5236\u5668\u65B9\u6CD5\uFF0C\u6700\u7EC8\u83B7\u5F97ModelAndView\u5BF9\u8C61</span>
		mv <span class="token operator">=</span> ha<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span>
		mappedHandler<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>asyncManager<span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">applyDefaultViewName</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> mv<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8C03\u7528\u62E6\u622A\u5668\u7684postHandle()</span>
		mappedHandler<span class="token punctuation">.</span><span class="token function">applyPostHandle</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mv<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		dispatchException <span class="token operator">=</span> ex<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// As of 4.3, we&#39;re processing Errors thrown from handler methods as well,</span>
			<span class="token comment">// making them available for @ExceptionHandler methods and other scenarios.</span>
		dispatchException <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">&quot;Handler dispatch failed&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
<span class="token comment">// \u540E\u7EED\u5904\u7406\uFF1A\u5904\u7406\u6A21\u578B\u6570\u636E\u548C\u6E32\u67D3\u89C6\u56FE</span>
		<span class="token function">processDispatchResult</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span> mv<span class="token punctuation">,</span> dispatchException<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">triggerAfterCompletion</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">triggerAfterCompletion</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">,</span> mappedHandler<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NestedServletException</span><span class="token punctuation">(</span><span class="token string">&quot;Handler processing failed&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>asyncManager<span class="token punctuation">.</span><span class="token function">isConcurrentHandlingStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Instead of postHandle and afterCompletion</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mappedHandler <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mappedHandler<span class="token punctuation">.</span><span class="token function">applyAfterConcurrentHandlingStarted</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token comment">// Clean up any resources used by a multipart request.</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>multipartRequestParsed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">cleanupMultipart</span><span class="token punctuation">(</span>processedRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="springmvc\u7684\u6267\u884C\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#springmvc\u7684\u6267\u884C\u6D41\u7A0B" aria-hidden="true">#</a> SpringMVC\u7684\u6267\u884C\u6D41\u7A0B</h2><ul><li><p>\u7528\u6237\u5411\u670D\u52A1\u5668\u53D1\u9001\u8BF7\u6C42\uFF0C\u8BF7\u6C42\u88ABSpringMVC \u524D\u7AEF\u63A7\u5236\u5668 DispatcherServlet\u6355\u83B7\u3002</p></li><li><p>DispatcherServlet\u5BF9\u8BF7\u6C42URL\u8FDB\u884C\u89E3\u6790\uFF0C\u5F97\u5230\u8BF7\u6C42\u8D44\u6E90\u6807\u8BC6\u7B26\uFF08URI\uFF09\uFF0C\u5224\u65AD\u8BF7\u6C42URI\u5BF9\u5E94\u7684\u6620\u5C04\uFF1A</p><ul><li>\u4E0D\u5B58\u5728 <ul><li>\u518D\u5224\u65AD\u662F\u5426\u914D\u7F6E\u4E86mvc:default-servlet-handler</li><li>\u5982\u679C\u6CA1\u914D\u7F6E\uFF0C\u5219\u63A7\u5236\u53F0\u62A5\u6620\u5C04\u67E5\u627E\u4E0D\u5230\uFF0C\u5BA2\u6237\u7AEF\u5C55\u793A404\u9519\u8BEF</li><li>\u5982\u679C\u6709\u914D\u7F6E\uFF0C\u5219\u8BBF\u95EE\u76EE\u6807\u8D44\u6E90\uFF08\u4E00\u822C\u4E3A\u9759\u6001\u8D44\u6E90\uFF0C\u5982\uFF1AJS,CSS,HTML\uFF09\uFF0C\u627E\u4E0D\u5230\u5BA2\u6237\u7AEF\u4E5F\u4F1A\u5C55\u793A404 \u9519\u8BEF</li></ul></li><li>\u5B58\u5728\u5219\u6267\u884C\u4E0B\u9762\u7684\u6D41\u7A0B</li></ul></li><li><p>\u6839\u636E\u8BE5URI\uFF0C\u8C03\u7528HandlerMapping\u83B7\u5F97\u8BE5Handler\u914D\u7F6E\u7684\u6240\u6709\u76F8\u5173\u7684\u5BF9\u8C61\uFF08\u5305\u62ECHandler\u5BF9\u8C61\u4EE5\u53CA Handler\u5BF9\u8C61\u5BF9\u5E94\u7684\u62E6\u622A\u5668\uFF09\uFF0C\u6700\u540E\u4EE5HandlerExecutionChain\u6267\u884C\u94FE\u5BF9\u8C61\u7684\u5F62\u5F0F\u8FD4\u56DE</p></li><li><p>DispatcherServlet \u6839\u636E\u83B7\u5F97\u7684Handler\uFF0C\u9009\u62E9\u4E00\u4E2A\u5408\u9002\u7684HandlerAdapter</p></li><li><p>\u5982\u679C\u6210\u529F\u83B7\u5F97HandlerAdapter\uFF0C\u6B64\u65F6\u5C06\u5F00\u59CB\u6267\u884C\u62E6\u622A\u5668\u7684preHandler(\u2026)\u65B9\u6CD5\u3010\u6B63\u5411\u3011</p></li><li><p>\u63D0\u53D6Request\u4E2D\u7684\u6A21\u578B\u6570\u636E\uFF0C\u586B\u5145Handler\u5165\u53C2\uFF0C\u5F00\u59CB\u6267\u884CHandler\uFF08Controller)\u65B9\u6CD5\uFF0C\u5904\u7406\u8BF7\u6C42\u3002\u5728\u586B\u5145Handler\u7684\u5165\u53C2\u8FC7\u7A0B\u4E2D\uFF0C\u6839\u636E\u4F60\u7684\u914D\u7F6E\uFF0CSpring\u5C06\u5E2E\u4F60\u505A\u4E00\u4E9B\u989D\u5916\u7684\u5DE5\u4F5C\uFF1A</p><ul><li>HttpMessageConveter\uFF1A \u5C06\u8BF7\u6C42\u6D88\u606F\uFF08\u5982Json\u3001xml\u7B49\u6570\u636E\uFF09\u8F6C\u6362\u6210\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A\u6307\u5B9A\u7684\u54CD\u5E94\u4FE1\u606F</li><li>\u6570\u636E\u8F6C\u6362\uFF1A\u5BF9\u8BF7\u6C42\u6D88\u606F\u8FDB\u884C\u6570\u636E\u8F6C\u6362\u3002\u5982String\u8F6C\u6362\u6210Integer\u3001Double\u7B49</li><li>\u6570\u636E\u683C\u5F0F\u5316\uFF1A\u5BF9\u8BF7\u6C42\u6D88\u606F\u8FDB\u884C\u6570\u636E\u683C\u5F0F\u5316\u3002 \u5982\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u683C\u5F0F\u5316\u6570\u5B57\u6216\u683C\u5F0F\u5316\u65E5\u671F\u7B49</li><li>\u6570\u636E\u9A8C\u8BC1\uFF1A \u9A8C\u8BC1\u6570\u636E\u7684\u6709\u6548\u6027\uFF08\u957F\u5EA6\u3001\u683C\u5F0F\u7B49\uFF09\uFF0C\u9A8C\u8BC1\u7ED3\u679C\u5B58\u50A8\u5230BindingResult\u6216Error\u4E2D</li><li>Handler\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u5411DispatcherServlet \u8FD4\u56DE\u4E00\u4E2AModelAndView\u5BF9\u8C61</li><li>\u6B64\u65F6\u5C06\u5F00\u59CB\u6267\u884C\u62E6\u622A\u5668\u7684postHandle(...)\u65B9\u6CD5\u3010\u9006\u5411\u3011</li><li>\u6839\u636E\u8FD4\u56DE\u7684ModelAndView\uFF08\u6B64\u65F6\u4F1A\u5224\u65AD\u662F\u5426\u5B58\u5728\u5F02\u5E38\uFF1A\u5982\u679C\u5B58\u5728\u5F02\u5E38\uFF0C\u5219\u6267\u884C HandlerExceptionResolver\u8FDB\u884C\u5F02\u5E38\u5904\u7406\uFF09\u9009\u62E9\u4E00\u4E2A\u9002\u5408\u7684ViewResolver\u8FDB\u884C\u89C6\u56FE\u89E3\u6790\uFF0C\u6839\u636EModel \u548CView\uFF0C\u6765\u6E32\u67D3\u89C6\u56FE</li><li>\u6E32\u67D3\u89C6\u56FE\u5B8C\u6BD5\u6267\u884C\u62E6\u622A\u5668\u7684afterCompletion(\u2026)\u65B9\u6CD5\u3010\u9006\u5411\u3011</li><li>\u5C06\u6E32\u67D3\u7ED3\u679C\u8FD4\u56DE\u7ED9\u5BA2\u6237\u7AEF</li></ul></li></ul>`,50),o=[p];function c(l,i){return s(),a("div",null,o)}var k=n(e,[["render",c],["__file","chapter7.html.vue"]]);export{k as default};
